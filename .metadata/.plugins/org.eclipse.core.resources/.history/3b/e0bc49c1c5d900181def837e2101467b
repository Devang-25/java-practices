package com.preety.chessboard.domain.util;

import com.preety.chessboard.domain.exception.NotAValidChessBoard;

public class Board {
	private boolean isOccupied[][];
	private Color colorPresent[][];
	private PieceType piecePresent[][];
	private int rows;
	private int cols;
	
	public void initialSetUp(String[][] boardData) {
		if(boardData == null || boardData.length ==0) {
			throw new NotAValidChessBoard("chess board is not initialized with pieces");
		} 
		int rows= boardData.length;
		int col= boardData[0].length;
		isOccupied= new boolean[rows][cols];
		
		for(int i=0; i<rows; i++) {
			for(int j=0; j<cols; j++) {
				if(boardData[i][j] != "--") {
					isOccupied[i][j]= true;
					colorPresent[i][j]= Color.valueOf(boardData[i][j].charAt(0) + "");
					piecePresent[i][j]= PieceType.valueOf(boardData[i][j].charAt(1) + "");
				} else {
					isOccupied[i][j]= false;
				}
			}
		}
		
	}
	
	public boolean isCellOccupied(int row, int col) {
		return isOccupied[row][ col];
	}
	public Color getCellPieceColor(int row, int col) {
		return colorPresent[row][ col];
	}
	public PieceType getCellPiece(int row, int col) {
		return piecePresent[row][ col];
	}

}
